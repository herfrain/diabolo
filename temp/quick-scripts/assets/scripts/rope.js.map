{"version":3,"sources":["rope.js"],"names":["cc","Class","extends","Component","properties","physicsBoxCollider","diabolo","diaboloComponent","used","camera","leftNode","rightNode","leftJoint","onLoad","find","node","getComponent","PhysicsBoxCollider","getChildByName","DistanceJoint","rightJoint","enabled","start","bandLRJoint","log","connectedBody","rigidbody","apply","rope","bandMouseJoint","addComponent","MouseJoint","mouseJoint","onCollisionEnter","other","self","onCollisionExit","console","linearVelocity","y","isFly","update","dt"],"mappings":"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","file":"rope.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        physicsBoxCollider:null,//物理碰撞\n        diabolo:null,//空竹\n        diaboloComponent:null,\n        used:false,//是否使用过\n        camera:null,\n        leftNode:null,//左连接点\n        rightNode:null,//右连接点\n        leftJoint:null,//左distanceJoint组件\n        leftJoint:null,//右distanceJoint组件\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this.diabolo=cc.find(\"Canvas/diabolo\")\n        //\n        this.physicsBoxCollider=this.node.getComponent(cc.PhysicsBoxCollider)\n        //\n        this.diaboloComponent=this.diabolo.getComponent(\"diabolo\")\n        this.camera=cc.find(\"Canvas/Main Camera\")\n\n        this.leftNode=this.node.getChildByName(\"left\")\n        this.rightNode=this.node.getChildByName(\"right\")\n        //绑定左右distanceJoint组件\n        this.leftJoint=this.leftNode.getComponent(cc.DistanceJoint)\n        this.rightJoint=this.rightNode.getComponent(cc.DistanceJoint)\n        this.physicsBoxCollider.enabled=false\n    },\n\n    start () {\n        \n    },\n\n    //绑定左右节点\n    bandLRJoint:function(){\n        cc.log(\"bandLRJoint\")\n        //连接\n        this.leftJoint.connectedBody=this.diaboloComponent.rigidbody\n        this.rightJoint.connectedBody=this.diaboloComponent.rigidbody\n        this.leftJoint.enabled=true\n        this.rightJoint.enabled=true\n        this.leftJoint.apply()//修改之后需要apply()才能真正设置完成\n        this.rightJoint.apply()\n        //重新设置空竹的属性\n        this.diaboloComponent.rope=this.node\n        this.diaboloComponent.leftNode=this.leftNode\n        this.diaboloComponent.rightNode=this.rightNode\n        this.diaboloComponent.leftJoint=this.leftJoint\n        this.diaboloComponent.rightJoint=this.rightJoint\n        this.diaboloComponent.physicsBoxCollider=this.physicsBoxCollider\n    },\n\n    //重新绑定mousejoint\n    bandMouseJoint:function(){\n        this.diabolo.addComponent(cc.MouseJoint)//添加组件\n        this.diaboloComponent.mouseJoint=this.diabolo.getComponent(cc.MouseJoint)\n    },\n\n    onCollisionEnter:function(other,self){\n        cc.log('enter')\n    },\n\n    //如果检测到与绳子发生碰撞，则建立两边点的链接，并将绑定mousejoint，飞行状态设为false\n    //结束碰撞时，如果空竹是往下落的，则添加绳子\n    onCollisionExit: function (other, self) {\n        console.log('on collision exit');\n        if(this.diaboloComponent.rigidbody.linearVelocity.y<0&&this.diaboloComponent.isFly){\n            //绑定左右节点\n            this.bandLRJoint()\n            //绑定mouseJoint\n            this.bandMouseJoint()\n            // other.enabled=false\n            this.diaboloComponent.isFly=false//固定在绳子上\n            //关门\n            this.physicsBoxCollider.enabled=true\n        }\n\n\n    },\n\n    update (dt) {\n        //如果空竹在上面，则开门\n        //空竹弹出后，开门\n        //其他情况，关门\n        //cc.log(this.diabolo.isFly)\n        //if(this.on)\n        // cc.log(this.node.isValid)\n\n        // if(this.node.isValid){//如果还存在\n        //     if(this.node.y<this.diabolo.y&&this.physicsBoxCollider.enabled&&this.diaboloComponent.isFly){\n        //         //cc.log(1)\n        //         this.physicsBoxCollider.enabled=false\n        //     }\n        //     else if(!this.diaboloComponent.isFly&&!this.physicsBoxCollider.enabled){\n        //         this.physicsBoxCollider.enabled=true\n        //     }\n        // }\n        \n    },\n});\n"]}